==31264== Memcheck, a memory error detector
==31264== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==31264== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==31264== Command: /rhome/a/aburic1/workspace/TP/T12/Z3/.runme
==31264== Parent PID: 31245
==31264== 
==31264== Invalid read of size 8
==31264==    at 0x4EABB50: std::_Rb_tree_increment(std::_Rb_tree_node_base const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.19)
==31264==    by 0x4014FA: std::_Rb_tree_const_iterator<int>::operator++(int) (stl_tree.h:278)
==31264==    by 0x40119B: std::set<int, std::less<int>, std::allocator<int> > operator*<int>(std::set<int, std::less<int>, std::allocator<int> > const&, std::set<int, std::less<int>, std::allocator<int> > const&) (main.cpp:17)
==31264==    by 0x400DDD: main (main.cpp:38)
==31264==  Address 0x5a1c598 is 24 bytes inside a block of size 40 free'd
==31264==    at 0x4C2C2BC: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31264==    by 0x402783: __gnu_cxx::new_allocator<std::_Rb_tree_node<int> >::deallocate(std::_Rb_tree_node<int>*, unsigned long) (new_allocator.h:110)
==31264==    by 0x4020AD: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_put_node(std::_Rb_tree_node<int>*) (stl_tree.h:374)
==31264==    by 0x4017E3: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_destroy_node(std::_Rb_tree_node<int>*) (stl_tree.h:422)
==31264==    by 0x402467: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase_aux(std::_Rb_tree_const_iterator<int>) (stl_tree.h:1746)
==31264==    by 0x401A6E: std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::erase[abi:cxx11](std::_Rb_tree_const_iterator<int>) (stl_tree.h:809)
==31264==    by 0x40159C: std::set<int, std::less<int>, std::allocator<int> >::erase[abi:cxx11](std::_Rb_tree_const_iterator<int>) (stl_set.h:552)
==31264==    by 0x40118A: std::set<int, std::less<int>, std::allocator<int> > operator*<int>(std::set<int, std::less<int>, std::allocator<int> > const&, std::set<int, std::less<int>, std::allocator<int> > const&) (main.cpp:19)
==31264==    by 0x400DDD: main (main.cpp:38)
==31264== 
==31264== 
==31264== HEAP SUMMARY:
==31264==     in use at exit: 0 bytes in 0 blocks
==31264==   total heap usage: 14 allocs, 14 frees, 560 bytes allocated
==31264== 
==31264== All heap blocks were freed -- no leaks are possible
==31264== 
==31264== For counts of detected and suppressed errors, rerun with: -v
==31264== ERROR SUMMARY: 3 errors from 1 contexts (suppressed: 0 from 0)
