{"id":2527,"name":"Tehnike programiranja (2015\/2016), Zada\u0107a 2, zadatak 4","language":"C++","required_compiler":"g++","preferred_compiler":"g++","compiler_features":[],"compiler_options":"-std=c++11 -O1 -Wall -Wuninitialized -Winit-self -Wfloat-equal -Wno-sign-compare -Werror=implicit-function-declaration -Werror=vla -pedantic -lm -pass-exit-codes","compiler_options_debug":"-std=c++11 -ggdb -lm -pass-exit-codes","compile":"true","run":"false","test":"true","debug":"true","profile":"true","test_specifications":[{"id":2528,"require_symbols":[],"replace_symbols":[],"code":"\/\/AT1 - trivijalan (fragmentirana, periodican)\n\/\/Ispis je hardkodiran\n    {\n        std::vector<int> vektor{1, 2, 3, 4, 1, 2}, tempV{1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4};\n        int **matrica{nullptr};\n        matrica = KreirajPoUvrnutomPravilu(vektor, 3, true);\n\n        for (int i{0}; i < 12; i++)\n        {\n            for (int j{0}; j < tempV.at(i); j++)\n                    std::cout << matrica[i][j] << \" \";\n            std::cout<<std::endl;\n        }\n\n       for (int i{0}; i< 12; i++)\n            delete [] matrica[i];\n       delete [] matrica;\n    }","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":""},"expected":["4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":2529,"require_symbols":[],"replace_symbols":[],"code":"\/\/AT2 - trivijalan (fragmentirana, izvrnut)\n\/\/Ispis je hardkodiran\n    {\n        std::vector<int> vektor{4, 3, 2, 1}, tempV{1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4};\n        int **matrica{nullptr};\n        matrica = KreirajPoUvrnutomPravilu(vektor, 3, true);\n\n        for (int i{0}; i < 12; i++)\n        {\n            for (int j{0}; j < tempV.at(i); j++)\n                    std::cout << matrica[i][j] << \" \";\n            std::cout<<std::endl;\n        }\n\n       for (int i{0}; i< 12; i++)\n            delete [] matrica[i];\n       delete [] matrica;\n    }","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":""},"expected":["4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n4 \\n3 4 \\n2 3 4 \\n1 2 3 4 \\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":2530,"require_symbols":[],"replace_symbols":[],"code":"\/\/AT5 - trivijalan (kontinualna, periodican)\n\/\/Ispis je hardkodiran\n    {\n        std::vector<int> vektor{1, 2, 3, 4, 1, 2}, tempV{1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4};\n        int **matrica{nullptr};\n        matrica = KreirajPoUvrnutomPravilu(vektor, 3, false);\n        int l{0};\n\n        for (int i{0}; i < 12; i++)\n        {\n            for (int j{0}; j < tempV.at(i); j++)\n                std::cout << matrica[i][j] << \" \";\n            std::cout<<std::endl;\n        }\n\n        delete [] matrica[0];\n        delete [] matrica;\n    }","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":""},"expected":["1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":2531,"require_symbols":[],"replace_symbols":[],"code":"\/\/AT6 - trivijalan (kontinualna, izvrnut)\n\/\/Ispis je hardkodiran\n    {\n        std::vector<int> vektor{4, 3, 2, 1}, tempV{1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4};\n        int **matrica{nullptr};\n        matrica = KreirajPoUvrnutomPravilu(vektor, 3, false);\n\n        for (int i{0}; i < 12; i++)\n        {\n            for (int j{0}; j < tempV.at(i); j++)\n                std::cout << matrica[i][j] << \" \";\n            std::cout<<std::endl;\n        }\n\n        delete [] matrica[0];\n        delete [] matrica;\n    }","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":""},"expected":["1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n1 \\n2 1 \\n3 2 1 \\n4 3 2 1 \\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":2532,"require_symbols":[],"replace_symbols":[],"code":" _main();\n _main();\n _main();","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":"6 1 2 3 4 1 2 3 1 4 1 2 -4 1 3 1 6 1 2 3 4 1 2 -3 1\\n"},"expected":["Unesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Dinamicki alocirana matrica:\\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan vektor!\\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan broj ponavljanja!\\n","Unesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Dinamicki alocirana matrica:\\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\n4  \\n3  4  \\n2  3  4  \\n1  2  3  4  \\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan vektor.\\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan broj ponavljanja!\\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"},{"id":2533,"require_symbols":[],"replace_symbols":[],"code":" _main();\n _main();\n _main();","global_above_main":"","global_top":"","running_params":{"timeout":"10","vmem":"1000000","stdin":"6 1 2 3 4 1 2 3 0 4 1 2 -4 1 3 0 6 1 2 3 4 1 2 -3 0\\n"},"expected":["Unesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Dinamicki alocirana matrica:\\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1  \\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1  \\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1 \\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan vektor!\\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan broj ponavljanja!\\n","Unesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Dinamicki alocirana matrica:\\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1  \\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1  \\n1  \\n2  1  \\n3  2  1  \\n4  3  2  1  \\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan vektor.\\nUnesite broj elemenata vektora: Unesite elemente vektora: Unesite broj ponavljanja: Odaberite alokaciju: 1 - fragmentirana, 0 - kontinualna: Izuzetak: Neispravan broj ponavljanja!\\n"],"expected_exception":"false","expected_crash":"false","ignore_whitespace":"false","regex":"false","substring":"false"}]}